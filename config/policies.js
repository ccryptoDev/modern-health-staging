module.exports.policies = {
	UserController: {
		registeruser: [ "Maintenance", "isAuthenticated" ],
		manageproducts: [ "Maintenance", "isAuthenticated" ],
		registerDevice: [ "Maintenance", "validation/User/RegisterDeviceValidation" ],
		finalizeUser: [ "Maintenance", "isUserAuthenticated", "validation/User/FinalizeValidation" ],
		smsCodeNotification: [ "Maintenance", "isUserAuthenticated", "validation/User/SmsCodeNotificationValidation" ],
		smsCodeVerification: [ "Maintenance", "isUserAuthenticated", "validation/User/SmsCodeVerificationValidation" ],
		uploadProfilePicture: [ "Maintenance", "isUserAuthenticated", "UploadImage" ],
		addScreenName: [ "Maintenance", "isUserAuthenticated", "validation/User/AddScreenNameValidation" ],
		getUserProfile: [ "Maintenance", "isUserAuthenticated" ],
		getAllUserAgreements: [ "Maintenance", "isUserAuthenticated" ],
		changeNotificationStatus: [ "Maintenance", "isUserAuthenticated", "validation/User/SmsNotificationStatusValidation" ],
		creditLimitRequest: [ "Maintenance", "isUserAuthenticated", "validation/User/CreditLimitValidation" ],
		updateProfile: [ "Maintenance", "isUserAuthenticated", "validation/User/UpdatedInformation" ],
		registerNewAdmin: [],
		apiLogin: [ "Maintenance", "validation/User/ApiLoginValidation" ],
		login: [ "Maintenance", "validation/User/LoginValidation" ],
		preLogin: [ "Maintenance", "isUserAuthenticated" ],
		logout: [ "Maintenance", "isAuthenticated" ],
		getSettingDetail: [ "Maintenance", "isUserAuthenticated" ],
		updateSettingOfUser: [ "Maintenance", "isUserAuthenticated" ],
		getUserLoanStatus: [ "Maintenance", "isUserAuthenticated" ],
		forgetApiPassword: [ "Maintenance", "validation/User/ForgetApiPasswordValidation" ],
		changeApiPassword: [ "Maintenance", "validation/User/changeApiPasswordValidation" ],
		forgetPasscode: [ "Maintenance", "validation/User/ForgetPasscodeValidation" ],
		getallUserDetails: [ "Maintenance", "isAuthenticated" ],
		ajaxManageUserlist: [ "Maintenance", "isAuthenticated" ],
		resendVerficationlink: [ "Maintenance", "isUserAuthenticated" ],
		viewUserDetails: [ "Maintenance", "isAuthenticated" ],
		updateUserStatus: [ "Maintenance", "isAuthenticated" ],
		deleteUserDetails: [ "Maintenance", "isAuthenticated" ],
		getAllPaymentManagement: [ "Maintenance", "isAuthenticated" ],
		getAllLatePaymentManagement: [ "Maintenance", "isAuthenticated" ],
		changeverifystatus: [ "Maintenance", "isAuthenticated" ],
		changephoneverifystatus: [ "Maintenance", "isAuthenticated" ],
		sendverficationlink: [ "Maintenance", "isAuthenticated" ],
		sendverficationcode: [ "Maintenance", "isAuthenticated" ],
		updatepushnotification: [ "Maintenance", "isUserAuthenticated" ],
		removephone: [ "Maintenance", "isAuthenticated" ],
		changeemail: [ "Maintenance", "isAuthenticated" ],
		changeAPIEmailaddress: [ "Maintenance", "isUserAuthenticated" ],
		changephone: [ "Maintenance", "isAuthenticated" ],
		socialRegisterDevice: [ "Maintenance", "validation/User/SocialRegisterDeviceValidation" ],
		finalizeSocialUser: [ "Maintenance", "validation/User/FinalizeSocialUserValidation" ],
		userTrackingData: [ "Maintenance", "isUserAuthenticated" ],
		ajaxUserTrackingList: [ "Maintenance", "isAuthenticated" ],
		showUserTrackingMap: [ "Maintenance", "isAuthenticated" ],
		userContactsData: [ "Maintenance", "isUserAuthenticated" ],
		ajaxUserContactsList: [ "Maintenance", "isAuthenticated" ],
		userInvitesData: [ "Maintenance", "isUserAuthenticated" ],
		createstateregulation: [ "Maintenance", "validation/State/CreateLoanStateValidation" ],
		createupdateamountcap: [ "Maintenance", "validation/manageproducts/Addamountcapvalidation" ],
		updateUserNameDetails: [ "Maintenance", "isAuthenticated" ],
		updateAddressDetails: [ "Maintenance", "isAuthenticated" ],
		adminLoginView: [ "Maintenance" ],
		forgetPassword: [ "Maintenance" ],
		ajaxregisteruserlist: [ "Maintenance", "isAuthenticated" ],
		maintenanceView: [ "CheckMaintenance" ],
		newresentinviteemail: [ "Maintenance", "isAuthenticated" ],
		resetUserDetails: [ "Maintenance", "isAuthenticated" ],
		getallResetUsers: [ "Maintenance", "isAuthenticated" ],
		ajaxManageResetUserlist: [ "Maintenance", "isAuthenticated" ],
		viewResetUserDetails: [ "Maintenance", "isAuthenticated" ],
		changemobile: [ "Maintenance", "isLoginAuthenticated" ],
		joinRoom: [ "Maintenance" ]
	},
	TwilioController: {
		startverification: [ "Maintenance" ],
		validate: [ "Maintenance"]
	},
	AgreementController: {
		createAgreement: [ "Maintenance", "isUserAuthenticated", "validation/Agreement/AgreementValidation" ],
		getAgreementList: [ "Maintenance", "isUserAuthenticated" ],
		getAgreement: [ "Maintenance", "isUserAuthenticated" ],
		agreement: [ "Maintenance", "isAuthenticated", "validation/Agreement/AgreementValidation" ],
		updateAgreement: [ "Maintenance", "validation/Agreement/UpdateAgreementValidation" ],
		agreementList: [ "Maintenance", "isAuthenticated", "isUserAuthenticated" ],
		createAgreementView: [ "Maintenance", "isAuthenticated" ],
		getAllAgreement: [ "Maintenance", "isAuthenticated" ],
		getAgreementDetail: [ "Maintenance", "isAuthenticated" ],
		UpdateAgreementView: [ "Maintenance", "isAuthenticated" ],
		deleteAgreement: [ "Maintenance", "isAuthenticated" ],
		getListOfDocuments: [ "Maintenance", "isUserAuthenticated" ],
		createAgreementDetail: [ "Maintenance", "validation/Agreement/AgreementValidation" ],
		getAgreementDetailForStatic: [ "Maintenance", "isUserAuthenticated" ],
		getAgreementDetailForLoanAndPromissory: [ "Maintenance", "isUserAuthenticated" ],
		getAgreementDetailForTila: [ "Maintenance", "isUserAuthenticated" ],
		getAgreementDetailForAdverse: [ "Maintenance", "isUserAuthenticated" ]
	},
	StateController: {
		createState: [ "Maintenance", "validation/State/CreateStateValidation" ],
		updateState: [ "Maintenance", "validation/State/UpdateStateValidation" ]
	},
	SettingController: {
		createSettingList: [ "Maintenance", "validation/Setting/SettingcreateValidation" ],
		updateSetting: [ "Maintenance", "validation/Setting/SettingUpdateValidation" ],
		getAllSetting: [ "Maintenance", "validation/Setting/SettingFindValidation" ],
		deleteSettingList: [ "Maintenance", "validation/Setting/SettingdeleteValidation" ]
	},
	PaymentGatewayFundingController: {
		gatewayFunding: [ "Maintenance", "basicAuth" ],
		notificationforJitFunding: [ "Maintenance", "basicAuth" ]
	},
	PlaidUser: {
		getLatestData: [ "Maintenance", "isUserAuthenticated" ],
		getForUserBankAccount: [ "Maintenance", "isUserAuthenticated" ],
		verifyEmailId: [ "Maintenance", "isUserAuthenticated" ],
		getEmailVerified: [ "Maintenance", "isUserAuthenticated" ]
	},
	AchController: {
		updateEmployee: [ "Maintenance" ],
		showAllPendingAch: [ "Maintenance", "isAuthenticated" ],
		ajaxPendingAch: [ "Maintenance", "isAuthenticated" ],
		getAchUserDetails: [ "Maintenance", "isAuthenticated" ],
		confirmProcedure: ['Maintenance','isAuthenticated'],
		getIncompleteApplication: [ "Maintenance", "isAuthenticated" ],
		addAchComments: [ "Maintenance", "isAuthenticated", "validation/Ach/AddAchCommentsValidation" ],
		uploadDocumentProof: [ "Maintenance", "isAuthenticated", "validation/Ach/AddAchDocumentsValidation", "validation/Ach/ProofDocumentsValidation" ],
		defaultUsers: [ "Maintenance", "isAuthenticated" ],
		ajaxDefaultUsersList: [ "Maintenance", "isAuthenticated" ],
		viewDefaultUser: [ "Maintenance", "isAuthenticated" ],
		ajaxAchComments: [ "Maintenance", "isAuthenticated" ],
		showAllComplete: [ "Maintenance", "isAuthenticated" ],
		completeApplication: [ "Maintenance", "isAuthenticated" ],
		showAllBlocked: [ "Maintenance", "isAuthenticated" ],
		ajaxBlockedAch: [ "Maintenance", "isAuthenticated" ],
		releaseApp: [ "Maintenance", "isAuthenticated" ],
		approveUserLoan: [ "Maintenance", "isAuthenticated" ],
		manageReconciliation: [ "Maintenance", "isAuthenticated" ],
		ajaxReconciliationList: [ "Maintenance", "isAuthenticated" ],
		showAllDenied: [ "Maintenance", "isAuthenticated" ],
		ajaxDeniedApplication: [ "Maintenance", "isAuthenticated" ],
		viewreconciliationDetails: [ "Maintenance", "isAuthenticated" ],
		cancelAch: [ "Maintenance", "isAuthenticated" ],
		makepayment: [ "Maintenance", "isAuthenticated" ],
		addchargeoff: [ "Maintenance", "isAuthenticated" ],
		approvePatientloan: [ "Maintenance", "isAuthenticated" ],
		updatePatientloanstartdate: [ "Maintenance", "isAuthenticated" ],
		denyUserLoan: [ "Maintenance", "isAuthenticated" ],
		sendAddBankInvite: [ "Maintenance", "isAuthenticated" ],
		updateSetDate: [ "Maintenance", "isAuthenticated" ],
		updatePreferredDate: [ "Maintenance", "isAuthenticated" ],
		linkdoctorstaff: [ "Maintenance", "isAuthenticated" ],
		showAllInprogress: [ "Maintenance", "isAuthenticated" ],
		showFundedContracts: [ "Maintenance", "isAuthenticated" ],
		showAllArchivedDenied: [ "Maintenance", "isAuthenticated" ],
		showAllArchivedPendingAch: [ "Maintenance", "isAuthenticated" ],
		movetoopenupdate: [ "Maintenance", "isAuthenticated" ],
		showAllToDoItemsPendingAch: [ "Maintenance", "isAuthenticated" ],
		showAllToDoItemsDenied: [ "Maintenance", "isAuthenticated" ],
		showProcedureDateSet: [ "Maintenance", "isAuthenticated" ],
		markAsReviewed: [ "Maintenance", "isAuthenticated" ],
		showAllToDoItemsOpenApplication: [ "Maintenance", "isAuthenticated" ],
		showAllArchivedOpenAch: [ "Maintenance", "isAuthenticated" ],
		showAllOpenApplicationAch: [ "Maintenance", "isAuthenticated" ],
		showInCompleteApplicationAch: [ "Maintenance", "isAuthenticated" ],
		ajaxOpenApplicationAch: [ "Maintenance", "isAuthenticated" ],
		providerlist: [ "Maintenance", "isAuthenticated" ],
		ajaxProvider: [ "Maintenance", "isAuthenticated" ],
		resetToPendingState: [ "Maintenance", "isAuthenticated" ]
	},
	AdminuserController: {
		changepassword: [ "Maintenance", "isAuthenticated" ],
		updatepassword: [ "Maintenance", "isAuthenticated" ],
		adminuserlist: [ "Maintenance", "isAuthenticated" ],
		createnewuser: [ "Maintenance", "isAuthenticated" ],
		addnewuser: [ "Maintenance", "isAuthenticated", "validation/Adminuser/addnewuserValidation" ],
		edituser: [ "Maintenance", "isAuthenticated" ],
		updateuser: [ "Maintenance", "isAuthenticated", "validation/Adminuser/edituserValidation" ],
		updateAdminUserStatus: [ "Maintenance", "isAuthenticated" ],
		resetPassword: [ "Maintenance", "validation/Adminuser/resetPasswordValidation" ],
		ajaxadminuserlist: [ "Maintenance", "isAuthenticated" ],
		sendContinueAppEmail: ["Maintenance", "isAuthenticated"]
	},
	LogactivityController: {
		manageLogActivity: [ "Maintenance", "isAuthenticated" ],
		ajaxManageLogList: [ "Maintenance", "isAuthenticated" ],
		viewlogDetails: [ "Maintenance", "isAuthenticated" ],
		communicationlog: [ "Maintenance", "isAuthenticated" ],
		managelogactivity: [ "Maintenance", "isAuthenticated" ]
	},
	TransUnionController: {
		transunionRegistration: [ "Maintenance", "isUserAuthenticated" ],
		registerCreditMonitoring: [ "Maintenance", "isUserAuthenticated" ],
		checkCreditMonitoring: [ "Maintenance", "isUserAuthenticated" ],
		updateCreditMonitoring: [ "Maintenance", "isUserAuthenticated" ],
		showCreditMonitoring: [ "Maintenance", "isUserAuthenticated" ],
		renewCreditMonitoring: [ "Maintenance", "isUserAuthenticated" ],
		getCreditMonitoringDetails: [ "Maintenance", "isUserAuthenticated" ],
		creditmonitoringusers: [ "Maintenance", "isAuthenticated" ],
		ajaxcreditmonitoringuserlist: [ "Maintenance", "isAuthenticated" ],
		viewCreditUserDetails: [ "Maintenance", "isAuthenticated" ],
		registernewCreditMonitoring: [ "Maintenance", "isUserAuthenticated" ]
	},
	HomeController: {
		addUser: [ "Maintenance", "validation/User/addnewuserValidation" ],
		getthecashhome: [ "Maintenance", "validation/User/AddNewUserBytfchome" ],
		showHome: [ "Maintenance" ],
		signupstart: [ "Maintenance", "isApplicationAuthenticated" ],
		register: [ "Maintenance" ],
		userinformationfull: [ "Maintenance", "isApplicationAuthenticated" ],
		userinformationfullmanual: [ "Maintenance", "isApplicationAuthenticated" ],
		financeinformation: [ "Maintenance", "isApplicationAuthenticated" ],
		financeinformationdata: [ "Maintenance", "isApplicationAuthenticated" ],
		loanofferdetails: [ "Maintenance" ],
		applicationoffer: [ "Maintenance", "isLoginAuthenticated" ],
		saveapplicationoffer: [ "Maintenance" ],
		loanpromissorynote: [ "Maintenance" ],
		createloanpromissorypdf: [ "Maintenance" ],
		createloanapplication: [ "Maintenance" ],
		success: [ "Maintenance" ],
		controlcenter: [ "Maintenance" ],
		userinformationfullform: [ "Maintenance", "isApplicationAuthenticated", "validation/User/addnewuserValidation" ],
		autocompleteBankname: [ "Maintenance" ],
		verifyUser: [ "Maintenance" ],
		willLogin: [ "Maintenance" ],
		alreadyExists: [ "Maintenance" ],
		login: [ "Maintenance" ],
		setpassword: [ "Maintenance" ],
		updatepassword: [ "Maintenance" ],
		cosignupstart: [ "Maintenance" ],
		loansuccess: [ "Maintenance" ],
		loanfailure: [ "Maintenance" ],
		sessionTimeout: [ "Maintenance" ],
		editprofile: [ "Maintenance", "isLoginAuthenticated" ],
		downloadconsentpdf: [ "Maintenance" ],
		forgotpassword: [ "Maintenance" ],
		chatsupport: [ "Maintenance" ],
		profileEmailverification: [ "Maintenance" ],
		profileEmailverify: [ "Maintenance" ],
		contactus: [ "Maintenance" ],
		privacypolicy: [ "Maintenance" ],
		termsconditions: [ "Maintenance" ],
		californiaconsumerprivacyactnotice: ["Maintenance"],
		userlogout: [ "Maintenance" ],
		logout: [ "Maintenance" ],
		practicehome: [ "Maintenance" ],
		loanamountconfirm: [ "Maintenance" ],
		apply: [ "Maintenance" ],
		applyPost: [ "Maintenance" ],
		practiceApplication: [ "Maintenance" ],
		createApplication: [ "Maintenance" ],
		createApplicationPost: [ "Maintenance" ],
		searchpractice: [ "Maintenance" ],
		applysearch: [ "Maintenance" ],
		addprovider: [ "Maintenance" ],
		addnewprovider: [ "Maintenance" ],
		providersuccess: [ "Maintenance" ],
		setSelectedPractice: [ "Maintenance" ],
		paymentcalculator: [ "Maintenance", "isApplicationAuthenticated" ],
		estimatemonthlypay: [ "Maintenance", "isApplicationAuthenticated" ],
		continueApplication: [ "Maintenance", "isApplicationAuthenticated" ],
		updateuserAnticipatedAmount: [ "Maintenance", "isApplicationAuthenticated" ],
		clicktosave: [ "Maintenance", "isApplicationAuthenticated" ],
		onclicktosave: [ "Maintenance", "isApplicationAuthenticated" ],
		updateuseremail: [ "Maintenance", "isLoginAuthenticated" ],
		sendverificationemail: [ "Maintenance" ],
		dashboard: [ "Maintenance", "isLoginAuthenticated" ],
		skipBankLogin: [ "Maintenance" ]
	},
	CustomerServiceController: {
		addNewUserByCustomerService: [ "Maintenance", "validation/User/AddNewUserByCustomerServiceValidation" ],
		addApplicationByCustomerService: [ "Maintenance", "isAuthenticated" ],
		transUnionInfoByCustomerService: [ "Maintenance", "isAuthenticated" ],
		addbankaccount: [ "Maintenance", "isLoginAuthenticated" ],
		saveincomedetails: [ "Maintenance", "isLoginAuthenticated" ],
		servicetransaction: [ "Maintenance", "isLoginAuthenticated" ],
		emailselectedAccount: [ "Maintenance", "isLoginAuthenticated" ],
		csmyoffer: [ "Maintenance", "isLoginAuthenticated" ],
		myoffers: [ "Maintenance", "isLoginAuthenticated" ],
		userpromissorynote: [ "Maintenance", "isLoginAuthenticated" ],
		createpromissorypdf: [ "Maintenance", "isLoginAuthenticated" ],
		filloutfinancedata: [ "Maintenance", "isLoginAuthenticated" ],
		borrowerloanamountconfirm: [ "Maintenance", "isLoginAuthenticated" ],
		checkEmail: [ "Maintenance", "isAuthenticated" ]
	},
	ApplicationController: {
		userinformation: [ "Maintenance" ],
		application: [ "Maintenance" ],
		createApplication: [ "Maintenance" ],
		createApplicationPost: [ "Maintenance" ],
		emailverifylanding: [ "Maintenance" ],
		adddocument: [ "Maintenance", "validation/Application/uploaddocumentValidation" ],
		createstateregulation: [ "Maintenance", "validation/State/CreateLoanStateValidation" ],
		promissorynote: [ "Maintenance", "isLoginAuthenticated" ],
		contract: [ "Maintenance", "isLoginAuthenticated" ],
		couserinformation: [ "Maintenance" ],
		couserinformationfull: [ "Maintenance" ],
		cofinancialinfomation: [ "Maintenance" ],
		sendforgotpassword: [ "Maintenance" ],
		usersetpassword: [ "Maintenance" ],
		updateuserpassword: [ "Maintenance" ],
		savechangepassword: [ "Maintenance" ],
		receivenotifi: [ "Maintenance" ],
		uploadAvatar: [ "Maintenance" ],
		uploaddropfiles: [ "Maintenance" ],
		createpromissorypdf: [ "Maintenance", "isLoginAuthenticated" ],
		importApplications: [ "Maintenance", "isAuthenticated" ],
		importApplicationsPost: [ "Maintenance", "isAuthenticated" ],
		confirmUserSetPassword: [ "Maintenance" ],
		confirmUserSetPasswordPost: [ "Maintenance" ],
		continueApplicationPost: [ "Maintenance", "isAuthenticated" ],
		saveloanoffer: [ "Maintenance", "isLoginAuthenticated" ],
		createloandetails: [ "Maintenance" ],
		finalize: [ "Maintenance", "isLoginAuthenticated" ],
		finalizeValidate: [ "Maintenance", "isLoginAuthenticated" ],
		submitApplicationButton: [ "Maintenance", "isLoginAuthenticated" ],
		thankyou: [ "Maintenance", "isLoginAuthenticated" ],
		generateNewOffers: [ "Maintenance", "isLoginAuthenticated" ],
	},
	EsignatureController: {
		saveSignature: [ "Maintenance" ]
	},
	BankController: {
		getbanktransaction: [ "Maintenance" ],
		addBankTransaction: [ "Maintenance", "isAddBankAuthenticated" ],
		saveplaiddetails: [ "Maintenance" ],
		updateUserdataPlaid: [ "Maintenance" ],
		saveplaidresponse: [ "Maintenance" ],
		savePlaidResponseError: [ "Maintenance" ],
		selectedAccount: [ "Maintenance" ],
		savebankinfo: [ "Maintenance" ],
		addbanklogin: [ "Maintenance", "isAddBankAuthenticated" ],
		addbankloginpost: [ "Maintenance", "isAddBankAuthenticated" ],
		addbankGetConsent: [ "Maintenance", "isAddBankAuthenticated" ],
		addbankSaveConsent: [ "Maintenance", "isAddBankAuthenticated" ],
		addbankThankyou: [ "Maintenance", "isAddBankAuthenticated" ],
		changeBank: [ "Maintenance", "isAuthenticated" ],
		repullPlaidInfo: [ "Maintenance", "isAuthenticated" ],
		getrepullPlaidDetails: [ "Maintenance", "isAuthenticated" ]
	},
	ScreentrackingController: {
		getIncompleteApplication: [ "Maintenance", "isAuthenticated" ],
		addScreentrackingComments: [ "Maintenance", "isAuthenticated", "validation/Screentracking/ScreentrackingCommentsValidation" ],
		incompleteDenyUserLoan: [ "Maintenance", "isAuthenticated" ],
		ajaxIncompleteList: [ "Maintenance", "isAuthenticated" ],
		viewIncomplete: [ "Maintenance", "isAuthenticated" ],
		getChangeLoanOfferDetails: [ "Maintenance", "isAuthenticated" ],
		updateNewloanincomedetails: [ "Maintenance", "isAuthenticated" ],
		ajaxScreentrackingComments: [ "Maintenance" ],
		ajaxAllusersComments: [ "Maintenance" ],
		addAlluserComments: [ "Maintenance", "isAuthenticated" ],
		incompletegetrepullPlaidDetails: [ "Maintenance", "isAuthenticated" ],
		manualLoanOfferDetails: [ "Maintenance", "isAuthenticated" ],
		savemanualLoanOfferDetails: [ "Maintenance", "isAuthenticated" ],
		ArchivedIncompleteApplication: [ "Maintenance", "isAuthenticated" ],
		movetoincompleteupdate: [ "Maintenance", "isAuthenticated" ],
		ToDoItemIncompleteApplication: [ "Maintenance", "isAuthenticated" ],
		markToIncompleteApp: [ "Maintenance", "isAuthenticated" ],
		movetoarchive: [ "Maintenance", "isAuthenticated" ],
		unarchive: [ "Maintenance", "isAuthenticated" ]

	},
	CategoryController: {
		getDashboardView: [ "Maintenance", "isAuthenticated" ]
	},
	PracticeController: {
		practiceList: [ "Maintenance", "isAuthenticated" ],
		practiceSettings: [ "Maintenance", "isAuthenticated" ],
		createpractice: [ "Maintenance", "isAuthenticated" ],
		createsettings: [ "Maintenance", "isAuthenticated" ],
		editCreditTier: ["Maintenance", "isAuthenticated" ],
		editCreditTierSettings: ["Maintenance", "isAuthenticated" ],
		editCreditRange: ["Maintenance", "isAuthenticated" ],
		editProductRule: ["Maintenance", "isAuthenticated" ],
		addProductRule: ["Maintenance", "isAuthenticated" ],
		addnewpractice: [ "Maintenance", "isAuthenticated" ],
		deletesetting: [ "Maintenance", "isAuthenticated" ],
		addnewsetting: [ "Maintenance", "isAuthenticated" ],
		editpracticesetting: [ "Maintenance", "isAuthenticated" ],
		ajaxpracticeList: [ "Maintenance", "isAuthenticated" ],
		ajaxpracticeSettingsList: [ "Maintenance", "isAuthenticated" ],
		editpractice: [ "Maintenance", "isAuthenticated" ],
		editsetting: [ "Maintenance", "isAuthenticated" ],
		addRule: [ "Maintenance", "isAuthenticated" ],
		addBtrSetting: [ "Maintenance", "isAuthenticated" ],
		editCreditRangePracticeSettings: [ "Maintenance", "isAuthenticated" ],
		updatepractice: [ "Maintenance", "isAuthenticated" ],
		practiceLogActivity: [ "Maintenance", "isAuthenticated" ],
		practiceAdminList: [ "Maintenance", "isAuthenticated" ],
		ajaxpracticeAdminUserList: [ "Maintenance", "isAuthenticated" ],
		addnewpracticeAdminUser: [ "Maintenance", "isAuthenticated" ],
		editpracticeadminuser: [ "Maintenance", "isAuthenticated" ],
		updatepracticeAdminUser: [ "Maintenance", "isAuthenticated" ],
		addPracticeAdmin: [ "Maintenance", "isAuthenticated" ],
		autoFillingUniversity: [ "Maintenance", "isAuthenticated" ],
		getschoolBranch: [ "Maintenance", "isAuthenticated" ],
		startPractice: [ "Maintenance", "isPracticeAuthenticated" ],
		resendinvite: [ "Maintenance", "isAuthenticated" ],
		checkpracticeurl: [ "Maintenance", "isAuthenticated" ],
		updatepracticeinfo: [ "Maintenance" ],
		createprocedure: [ "Maintenance" ],
		deleteprocedure: [ "Maintenance" ],
		updateprocedure: [ "Maintenance" ],
		addlendermerchantfees: [ "Maintenance" ],
		getmerchantfeetemplate: [ "Maintenance" ],
		getvendorinterestrate: [ "Maintenance" ],
		addstaffmembers: [ "Maintenance" ],
		getstaffmembers: [ "Maintenance" ],
		addfinancialinformation: [ "Maintenance" ],
		viewpracticedetails: [ "Maintenance", "isAuthenticated" ],
		addBankTransactionRule: [ "Maintenance", "isAuthenticated" ],
		practicesettingEdit: [ "Maintenance", "isAuthenticated" ],
		ajaxGetCurrentLoggedInPractice: [ "Maintenance" ],
	},
	StaffportalController: {
		setpassword: [ "Maintenance" ],
		updatepassword: [ "Maintenance" ],
		login: [ "Maintenance" ],
		signin: [ "Maintenance" ]
	},
	TestController: {
		testTransunioun: [ "Maintenance" ],
		testActumDebit: [ "Maintenance" ],
		testStripeRecurringPayment: [ "Maintenance" ],
		testActumRecurringPayment: [ "Maintenance" ],
		testCheckActumPayment: [ "Maintenance" ],
		testRegeneratePromissoryNote: [ "Maintenance" ],
		testShowInterestRate: [ "Maintenance" ],
		updateLoansetting: [ "Maintenance" ],
		testFundPracticeCreditPayment: [ "Maintenance" ],
		testMakeAmortizationSchedule: [ "Maintenance" ],
		archiveIncompleteApplications:["Maintenance", "isAuthenticated"],
		testExportFundedContracts: ["Maintenance", "isAuthenticated"],
		archiveIncompleteApplications:["Maintenance", "isAuthenticated"],
		expiredUsersDenied:["Maintenance", "isAuthenticated"],
		procedureConfirmedMailer: ["Maintenance","isAuthenticated"],
		procedureConfirmedEmail: ["Maintenance", "isAuthenticated"]
	},
	InstitutionController: {
		getPlaidTransactions: []
	},
	BorrowerController: {
		dashboard: [ "Maintenance", "isLoginAuthenticated" ],
		createnewapplication: [ "Maintenance", "isLoginAuthenticated" ],
		getApploanDetails: [ "Maintenance", "isLoginAuthenticated" ],
		updatenewapplication: [ "Maintenance", "isLoginAuthenticated" ],
		borrowerlogin: [ "Maintenance" ]
	},
	PracticereportController: {
		showPracticeReportList: [ "Maintenance", "isAuthenticated" ],
		ajaxCreditReportList: [ "Maintenance", "isAuthenticated" ]
	}
};
